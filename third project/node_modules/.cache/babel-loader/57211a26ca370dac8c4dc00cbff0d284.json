{"ast":null,"code":"var _jsxFileName = \"D:\\\\works\\\\react-course-exercises\\\\react-course\\\\third project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  console.log(\"this is correct\");\n\n  if (action.type === \"ADD\") {\n    console.log(\"this is true to\");\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    console.log(updatedItems);\n    console.log(updatedTotalAmount);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n    console.log(updatedItems);\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    console.log(\"hello I'm here.\");\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/works/react-course-exercises/react-course/third project/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","console","log","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,MAAIF,MAAM,CAACG,IAAP,KAAgB,KAApB,EAA2B;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAME,YAAY,GAAGL,KAAK,CAACH,KAAN,CAAYS,MAAZ,CAAmBL,MAAM,CAACM,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GACtBR,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACM,IAAP,CAAYE,KAAZ,GAAoBR,MAAM,CAACM,IAAP,CAAYG,MADtD;AAEAR,IAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYK,kBAAZ;AACA,WAAO;AACLX,MAAAA,KAAK,EAAEQ,YADF;AAELP,MAAAA,WAAW,EAAEU;AAFR,KAAP;AAKAN,IAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ;AACD;;AAED,SAAOT,gBAAP;AACD,CAlBD;;AAoBA,MAAMe,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCpB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,QAAMmB,oBAAoB,GAAIR,IAAD,IAAU;AACrCL,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAW,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAHD;;AAKA,QAAMS,yBAAyB,GAAIC,EAAD,IAAQ;AACxCH,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBa,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAClBrB,IAAAA,KAAK,EAAEgB,SAAS,CAAChB,KADC;AAElBC,IAAAA,WAAW,EAAEe,SAAS,CAACf,WAFL;AAGlBqB,IAAAA,OAAO,EAAEJ,oBAHS;AAIlBK,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BD;;GAAMV,Y;;KAAAA,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  console.log(\"this is correct\");\r\n  if (action.type === \"ADD\") {\r\n    console.log(\"this is true to\");\r\n    const updatedItems = state.items.concat(action.item);\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    console.log(updatedItems);\r\n    console.log(updatedTotalAmount);\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n\r\n    console.log(updatedItems);\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    console.log(\"hello I'm here.\");\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}